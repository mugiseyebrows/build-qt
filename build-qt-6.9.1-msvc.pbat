













def prepare
    github_checkout()
    call pull-mysql
    call pull-postgresql
    
    call pull-clang-msvc
    
    echo dir C:\llvm19\bin\libclang.dll
    dir C:\llvm19\bin\libclang.dll
    move /y C:\mingw64 C:\mingw64_
    move /y "C:\Program Files\PostgreSQL" "C:\Program Files\PostgreSQL_"
    move /y "C:\Program Files\MySQL" "C:\Program Files\MySQL_"
    move /y "C:\Program Files\OpenSSL" "C:\Program Files\OpenSSL_"
    move /y C:\Strawberry C:\Strawberry_
    move /y C:\tools\php C:\tools\php_
    move /y "C:\Program Files\LLVM" "C:\Program Files\LLVM_"

def get_source
    if_exist_return(qt-everywhere-src-6.9.1)
    download(https://qt.mirror.constant.com/official_releases/qt/6.9/6.9.1/single/qt-everywhere-src-6.9.1.zip, :cache, :v)
    unzip(qt-everywhere-src-6.9.1.zip, :t=qt-everywhere-src-6.9.1)

def configure
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.9.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.9.1
        mkdir(build)
        pushd build
            # -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON
            call ..\configure -prefix C:\Qt\6.9.1\msvc2020_64 -platform win32-msvc -submodules qtbase -release -skip qtwebengine -nomake examples -nomake tests -- -DFEATURE_system_zlib=OFF -DFEATURE_sql_mysql=ON -DFEATURE_sql_psql=ON -DPostgreSQL_ROOT=C:/postgresql-14 -DMySQL_ROOT=C:/mysql-8.2.0-winx64
            type config.summary
        popd
    popd


def qtbase
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.9.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.9.1\build
        ninja qtbase/all || exit /b
    popd


def install
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.9.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.9.1\build
        ninja install
    popd
    mugideploy copy-dep --bin C:\Qt\6.9.1\msvc2020_64\bin\qmake.exe --dst C:\Qt\6.9.1\msvc2020_64\bin
    mugideploy copy-dep --bin C:\mysql-8.2.0-winx64\lib\libmysql.dll --dst C:\Qt\6.9.1\msvc2020_64\bin
    mugideploy copy-dep --bin C:\postgresql-14\lib\libpq.dll --dst C:\Qt\6.9.1\msvc2020_64\bin
    # mugideploy copy-dep --bin C:\Qt\6.9.1\msvc2020_64\bin\qdoc.exe --dst C:\Qt\6.9.1\msvc2020_64\bin

def docs
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.9.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.9.1\build
        ninja docs
        ninja install_docs
    popd

def main depends on prepare get_source configure qtbase install
    zip(Qt-6.9.1-msvc2020.7z, C:\Qt\6.9.1\msvc2020_64)
    #zip(libclang-msvc2020.7z, C:\llvm19\bin\libclang.dll)
    github_upload(C:\Qt\6.9.1\msvc2020_64, :n=Qt-6.9.1-msvc2020)
    #github_upload(qt-everywhere-src-6.9.1\build\config.summary, :n=config.summary)
    github_release(Qt-6.9.1-msvc2020.7z)

github-workflow 1
workflow-name build-msvc2020