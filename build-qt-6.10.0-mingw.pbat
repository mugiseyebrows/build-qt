















def prepare
    github_checkout()
    if exist C:\mingw64 move /y C:\mingw64 C:\mingw64_
    if exist "C:\Program Files\PostgreSQL" move /y "C:\Program Files\PostgreSQL" "C:\Program Files\PostgreSQL_"
    if exist "C:\Program Files\MySQL" move /y "C:\Program Files\MySQL" "C:\Program Files\MySQL_"
    if exist "C:\Program Files\OpenSSL" move /y "C:\Program Files\OpenSSL" "C:\Program Files\OpenSSL_"
    if exist C:\Strawberry move /y C:\Strawberry C:\Strawberry_
    if exist C:\tools\php move /y C:\tools\php C:\tools\php_
    if exist "C:\Program Files\LLVM" move /y "C:\Program Files\LLVM" "C:\Program Files\LLVM_"

def source
    if_exist_return(src)
    download(https://download.qt.io/official_releases/qt/6.10/6.10.0/single/qt-everywhere-src-6.10.0.zip, :cache, :v)
    7z rn qt-everywhere-src-6.10.0.zip qt-everywhere-src-6.10.0 src
    unzip(qt-everywhere-src-6.10.0.zip, :t=src)

def configure
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.10.0\mingw_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    add_path(C:\mingw1310_64\bin)
    set CC=C:\mingw1310_64\bin\gcc
    set CXX=C:\mingw1310_64\bin\g++
    
    add_path(C:\llvm19\bin)
    add_path(C:\protoc\bin)

    pushd src
        # -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON
        call configure -prefix C:\Qt\6.10.0\mingw_64 -platform win32-g++ -release -skip qtwebengine -nomake examples -nomake tests -- -DFEATURE_system_zlib=OFF -DFEATURE_sql_mysql=ON -DFEATURE_sql_psql=ON -DPostgreSQL_ROOT=C:/postgresql-14 -DMySQL_ROOT=C:/mysql-8.2.0-winx64
        type config.summary
    popd

def llvm
    
    if_exist_return(C:\llvm19\bin\clang.exe)
    download(https://github.com/mugiseyebrows/build-clang/releases/download/19.1.7/llvm19-mingw.7z, :cache, :v)
    unzip(llvm19-mingw.7z, :o=C:\)
    

def mingw
    
    add_path(C:\mingw1310_64\bin)
    if_exist_return(C:\mingw1310_64\bin\gcc.exe)
    download(https://github.com/brechtsanders/winlibs_mingw/releases/download/13.1.0-16.0.5-11.0.0-ucrt-r5/winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z, :cache, :v)
    7z rn winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z mingw64 mingw1310_64
    unzip(winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z, :t=C:\mingw1310_64\bin\gcc.exe, :o=C:\)
    

def mysql
    if_exist_return(C:\mysql-8.2.0-winx64\bin\mysql.exe)
    download(https://cdn.mysql.com/Downloads/MySQL-8.2/mysql-8.2.0-winx64.zip, :cache, :v)
    unzip(mysql-8.2.0-winx64.zip, :o=C:\)

def postgresql
    if_exist_return(C:\postgresql-14\bin\psql.exe)
    download(https://get.enterprisedb.com/postgresql/postgresql-14.12-2-windows-x64-binaries.zip, :cache, :v)
    7z rn postgresql-14.12-2-windows-x64-binaries.zip pgsql postgresql-14
    unzip(postgresql-14.12-2-windows-x64-binaries.zip, :o=C:\)

def protobuf
    if_exist_return(C:\protoc\bin\protoc.exe)
    
    download(https://github.com/mugiseyebrows/build-protobuf/releases/download/v32.1/protobuf-mingw13.7z, :cache, :v)
    7z rn protobuf-mingw13.7z protobuf-mingw13 protobuf
    unzip(protobuf-mingw13.7z, :o=C:\)
    


def qtbase
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.10.0\mingw_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    add_path(C:\mingw1310_64\bin)
    set CC=C:\mingw1310_64\bin\gcc
    set CXX=C:\mingw1310_64\bin\g++
    
    add_path(C:\llvm19\bin)
    add_path(C:\protoc\bin)

    pushd src
        ninja qtbase/all || exit /b
    popd

def qtdeclarative
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.10.0\mingw_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    add_path(C:\mingw1310_64\bin)
    set CC=C:\mingw1310_64\bin\gcc
    set CXX=C:\mingw1310_64\bin\g++
    
    add_path(C:\llvm19\bin)
    add_path(C:\protoc\bin)

    pushd src
        ninja qtdeclarative/all || exit /b
    popd


def install
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.10.0\mingw_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    add_path(C:\mingw1310_64\bin)
    set CC=C:\mingw1310_64\bin\gcc
    set CXX=C:\mingw1310_64\bin\g++
    
    add_path(C:\llvm19\bin)
    add_path(C:\protoc\bin)

    pushd src
        ninja install
    popd
    mugideploy copy-dep --bin C:\Qt\6.10.0\mingw_64\bin\qmake.exe --dst C:\Qt\6.10.0\mingw_64\bin
    mugideploy copy-dep --bin C:\mysql-8.2.0-winx64\lib\libmysql.dll --dst C:\Qt\6.10.0\mingw_64\bin
    mugideploy copy-dep --bin C:\postgresql-14\lib\libpq.dll --dst C:\Qt\6.10.0\mingw_64\bin
    # libclang.dll is huge
    # mugideploy copy-dep --bin C:\Qt\6.10.0\mingw_64\bin\qdoc.exe --dst C:\Qt\6.10.0\mingw_64\bin

def docs
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.10.0\mingw_64\bin)
    use(python, 3.13)
    use(conda)
    use(cmake)
    # where python
    install(mugideploy)
    install(ninja)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    add_path(C:\mingw1310_64\bin)
    set CC=C:\mingw1310_64\bin\gcc
    set CXX=C:\mingw1310_64\bin\g++
    
    add_path(C:\llvm19\bin)
    add_path(C:\protoc\bin)

    pushd src
        ninja docs
        ninja install_docs
    popd

def main depends on mingw mysql postgresql prepare source configure qtbase qtdeclarative
    #copy(src\config.summary, C:\Qt\6.10.0\mingw_64)
    zip(Qt-6.10.0-mingw13.7z, C:\Qt\6.10.0\mingw_64)
    #zip(libclang-mingw13.7z, C:\llvm19\bin\libclang.dll)
    github_upload(C:\Qt\6.10.0\mingw_64, :n=Qt-6.10.0-mingw13)
    #github_upload(qt-everywhere-src-6.10.0\build\config.summary, :n=config.summary)
    github_release(Qt-6.10.0-mingw13.7z)

github-workflow 1
workflow-name build-mingw13