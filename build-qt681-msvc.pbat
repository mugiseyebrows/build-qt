














def prepare
    github_checkout()
    call pull-mysql
    call pull-postgresql
    
    call pull-clang-msvc
    
    echo dir C:\llvm19\bin\libclang.dll
    dir C:\llvm19\bin\libclang.dll
    move /y C:\mingw64 C:\mingw64_
    move /y "C:\Program Files\PostgreSQL" "C:\Program Files\PostgreSQL_"
    move /y "C:\Program Files\MySQL" "C:\Program Files\MySQL_"
    move /y "C:\Program Files\OpenSSL" "C:\Program Files\OpenSSL_"
    move /y C:\Strawberry C:\Strawberry_
    move /y C:\tools\php C:\tools\php_
    move /y "C:\Program Files\LLVM" "C:\Program Files\LLVM_"

def configure
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    download(https://qt.mirror.constant.com/official_releases/qt/6.8/6.8.1/single/qt-everywhere-src-6.8.1.zip, :cache, :v)
    unzip(qt-everywhere-src-6.8.1.zip, :t=qt-everywhere-src-6.8.1)
    pushd qt-everywhere-src-6.8.1
        mkdir(build)
        pushd build
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DQT_BUILD_SUBMODULES="qtbase;qtsvg;qtactiveqt;qtserialport;qtimageformats;qtshadertools;qtdeclarative;qttools;qtdoc" -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:\Qt\6.8.1\msvc2020_64 -DQT_QMAKE_TARGET_MKSPEC=win32-msvc -DQT_BUILD_TESTS=FALSE -DQT_BUILD_EXAMPLES=FALSE -DFEATURE_system_zlib=OFF -DFEATURE_sql_mysql=ON -DFEATURE_sql_psql=ON -DPostgreSQL_ROOT=C:/postgresql-14 -DMySQL_ROOT=C:/mysql-8.2.0-winx64 -Wno-dev ..
            type config.summary
        popd
    popd


def qtbase
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtbase
    popd

def qtsvg
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtsvg
    popd

def qtactiveqt
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtactiveqt
    popd

def qtserialport
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtserialport
    popd

def qtimageformats
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtimageformats
    popd

def qtshadertools
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtshadertools
    popd

def qtdeclarative
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtdeclarative
    popd

def qttools
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qttools
    popd

def qtdoc
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja qtdoc
    popd


def install
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja
        ninja install
    popd
    mugideploy copy-dep --bin C:\Qt\6.8.1\msvc2020_64\bin\qmake.exe --dst C:\Qt\6.8.1\msvc2020_64\bin
    mugideploy copy-dep --bin C:\mysql-8.2.0-winx64\lib\libmysql.dll --dst C:\Qt\6.8.1\msvc2020_64\bin
    mugideploy copy-dep --bin C:\postgresql-14\lib\libpq.dll --dst C:\Qt\6.8.1\msvc2020_64\bin
    # mugideploy copy-dep --bin C:\Qt\6.8.1\msvc2020_64\bin\qdoc.exe --dst C:\Qt\6.8.1\msvc2020_64\bin

def docs
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    pushd qt-everywhere-src-6.8.1\build
        ninja docs
        ninja install_docs
    popd

def qwt depends on qtbase qtsvg
    # if_exist_return(C:\Qwt-6.3.0-Qt-6.8.1\lib\qwt.dll)
    
    # call pull-mysql
    add_path(C:\mysql-8.2.0-winx64\bin)
    add_path(C:\mysql-8.2.0-winx64\lib)
    add_path(C:\postgresql-14\bin)
    add_path(C:\Qt\6.8.1\msvc2020_64\bin)
    use(python, 3.13)
    use(conda)
    # where python
    install(mugideploy)
    # mugideploy --help
    install(ninja)
    use(cmake)
    set LLVM_INSTALL_DIR=C:\llvm19
    
    call_vcvars()
    
    add_path(C:\llvm19\bin)

    git_clone(https://git.code.sf.net/p/qwt/git, qwt, :ref=v6.3.0)
    pushd qwt
        "C:\Program Files\Git\usr\bin\patch.exe" -N -p1 -i ../0001-release-no-examples-no-tests-install-prefix.patch
        qmake
        
        nmake
        nmake install
        
    popd

def main depends on prepare configure qtbase qtsvg qtactiveqt qtserialport qtimageformats qtshadertools qtdeclarative qttools qtdoc install docs qwt
    zip(Qt-6.8.1-msvc2020.7z, C:\Qt\6.8.1\msvc2020_64)
    zip(Qwt-6.3.0-Qt-6.8.1-msvc2020.7z, C:\Qwt-6.3.0-Qt-6.8.1)
    zip(libclang-msvc2020.7z, C:\llvm19\bin\libclang.dll)
    github_upload(C:\Qt\6.8.1\msvc2020_64, :n=Qt-6.8.1-msvc2020)
    github_upload(C:\Qwt-6.3.0-Qt-6.8.1, :n=Qwt-6.3.0-Qt-6.8.1-msvc2020)
    github_upload(mugideploy.log, :n=mugideploy.log)
    github_upload(qt-everywhere-src-6.8.1\build\config.summary, :n=config.summary)
    github_release(Qt-6.8.1-msvc2020.7z, Qwt-6.3.0-Qt-6.8.1-msvc2020.7z, libclang-msvc2020.7z)

github-workflow 1
workflow-name build-msvc2020