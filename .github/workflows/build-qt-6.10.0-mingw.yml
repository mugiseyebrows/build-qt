name: build-mingw13
on: push
jobs:
  main:
    runs-on: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: mingw
      shell: cmd
      run: |
        set PATH=C:\mingw1310_64\bin;C:\Program Files\7-Zip;%PATH%
        if exist C:\mingw1310_64\bin\gcc.exe goto mingw_end
        if not exist winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z (
            echo downloading winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z
            curl -L -o winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z https://github.com/brechtsanders/winlibs_mingw/releases/download/13.1.0-16.0.5-11.0.0-ucrt-r5/winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z
        )
        7z rn winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z mingw64 mingw1310_64
        if not exist C:\mingw1310_64\bin\gcc.exe 7z x -y -oC:\ winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64ucrt-11.0.0-r5.7z
        :mingw_end
    - name: mysql
      shell: cmd
      run: |
        set PATH=C:\Program Files\7-Zip;%PATH%
        if exist C:\mysql-8.2.0-winx64\bin\mysql.exe goto mysql_end
        if not exist mysql-8.2.0-winx64.zip (
            echo downloading mysql-8.2.0-winx64.zip
            curl -L -o mysql-8.2.0-winx64.zip https://cdn.mysql.com/Downloads/MySQL-8.2/mysql-8.2.0-winx64.zip
        )
        7z x -y -oC:\ mysql-8.2.0-winx64.zip
        :mysql_end
    - name: postgresql
      shell: cmd
      run: |
        set PATH=C:\Program Files\7-Zip;%PATH%
        if exist C:\postgresql-14\bin\psql.exe goto postgresql_end
        if not exist postgresql-14.12-2-windows-x64-binaries.zip (
            echo downloading postgresql-14.12-2-windows-x64-binaries.zip
            curl -L -o postgresql-14.12-2-windows-x64-binaries.zip https://get.enterprisedb.com/postgresql/postgresql-14.12-2-windows-x64-binaries.zip
        )
        7z rn postgresql-14.12-2-windows-x64-binaries.zip pgsql postgresql-14
        7z x -y -oC:\ postgresql-14.12-2-windows-x64-binaries.zip
        :postgresql_end
    - name: prepare
      shell: cmd
      run: |
        if exist C:\mingw64 move /y C:\mingw64 C:\mingw64_
        if exist "C:\Program Files\PostgreSQL" move /y "C:\Program Files\PostgreSQL" "C:\Program Files\PostgreSQL_"
        if exist "C:\Program Files\MySQL" move /y "C:\Program Files\MySQL" "C:\Program Files\MySQL_"
        if exist "C:\Program Files\OpenSSL" move /y "C:\Program Files\OpenSSL" "C:\Program Files\OpenSSL_"
        if exist C:\Strawberry move /y C:\Strawberry C:\Strawberry_
        if exist C:\tools\php move /y C:\tools\php C:\tools\php_
        if exist "C:\Program Files\LLVM" move /y "C:\Program Files\LLVM" "C:\Program Files\LLVM_"
    - name: source
      shell: cmd
      run: |
        set PATH=C:\Program Files\7-Zip;%PATH%
        if exist src goto source_end
        if not exist qt-everywhere-src-6.10.0.zip (
            echo downloading qt-everywhere-src-6.10.0.zip
            curl -L -o qt-everywhere-src-6.10.0.zip https://download.qt.io/official_releases/qt/6.10/6.10.0/single/qt-everywhere-src-6.10.0.zip
        )
        7z rn qt-everywhere-src-6.10.0.zip qt-everywhere-src-6.10.0 src
        if not exist src 7z x -y qt-everywhere-src-6.10.0.zip
        :source_end
    - name: configure
      shell: cmd
      run: |
        set PATH=C:\mysql-8.2.0-winx64\bin;C:\mysql-8.2.0-winx64\lib;C:\postgresql-14\bin;C:\Qt\6.10.0\mingw_64\bin;%LOCALAPPDATA%\Programs\Python\Python313;%LOCALAPPDATA%\Programs\Python\Python313\Scripts;C:\Python313;C:\Python313\Scripts;C:\Miniconda;C:\Miniconda\Scripts;C:\Program Files\CMake\bin;C:\mingw1310_64\bin;C:\llvm19\bin;C:\protoc\bin;%PATH%
        where mugideploy > NUL 2>&1 || pip install mugideploy
        where ninja > NUL 2>&1 || pip install ninja
        set LLVM_INSTALL_DIR=C:\llvm19
        set CC=C:\mingw1310_64\bin\gcc
        set CXX=C:\mingw1310_64\bin\g++
        pushd src
            call configure -prefix C:\Qt\6.10.0\mingw_64 -platform win32-g++ -release -skip qtwebengine -nomake examples -nomake tests -- -DFEATURE_system_zlib=OFF -DFEATURE_sql_mysql=ON -DFEATURE_sql_psql=ON -DPostgreSQL_ROOT=C:/postgresql-14 -DMySQL_ROOT=C:/mysql-8.2.0-winx64
            type config.summary
        popd
    - name: qtbase
      shell: cmd
      run: |
        set PATH=C:\mysql-8.2.0-winx64\bin;C:\mysql-8.2.0-winx64\lib;C:\postgresql-14\bin;C:\Qt\6.10.0\mingw_64\bin;%LOCALAPPDATA%\Programs\Python\Python313;%LOCALAPPDATA%\Programs\Python\Python313\Scripts;C:\Python313;C:\Python313\Scripts;C:\Miniconda;C:\Miniconda\Scripts;C:\Program Files\CMake\bin;C:\mingw1310_64\bin;C:\llvm19\bin;C:\protoc\bin;%PATH%
        where mugideploy > NUL 2>&1 || pip install mugideploy
        where ninja > NUL 2>&1 || pip install ninja
        set LLVM_INSTALL_DIR=C:\llvm19
        set CC=C:\mingw1310_64\bin\gcc
        set CXX=C:\mingw1310_64\bin\g++
        pushd src
            ninja qtbase/all || exit /b
        popd
    - name: qtdeclarative
      shell: cmd
      run: |
        set PATH=C:\mysql-8.2.0-winx64\bin;C:\mysql-8.2.0-winx64\lib;C:\postgresql-14\bin;C:\Qt\6.10.0\mingw_64\bin;%LOCALAPPDATA%\Programs\Python\Python313;%LOCALAPPDATA%\Programs\Python\Python313\Scripts;C:\Python313;C:\Python313\Scripts;C:\Miniconda;C:\Miniconda\Scripts;C:\Program Files\CMake\bin;C:\mingw1310_64\bin;C:\llvm19\bin;C:\protoc\bin;%PATH%
        where mugideploy > NUL 2>&1 || pip install mugideploy
        where ninja > NUL 2>&1 || pip install ninja
        set LLVM_INSTALL_DIR=C:\llvm19
        set CC=C:\mingw1310_64\bin\gcc
        set CXX=C:\mingw1310_64\bin\g++
        pushd src
            ninja qtdeclarative/all || exit /b
        popd
    - name: main
      shell: cmd
      run: |
        set PATH=C:\Program Files\7-Zip;%PATH%
        7z a -y Qt-6.10.0-mingw13.7z C:\Qt\6.10.0\mingw_64
    - name: upload
      uses: actions/upload-artifact@v4
      with:
        name: Qt-6.10.0-mingw13
        path: C:\Qt\6.10.0\mingw_64
    - name: release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: Qt-6.10.0-mingw13.7z
